pipeline {
	agent {
		node {
			//label 'data-loader'
			//label 'docker-dataloader-popsci'
                        label 'docker-dataloader'

		}
	}
	parameters {
    gitParameter(branchFilter: 'origin/(.*)', 
        defaultValue: 'master', 
        name: 'Tag', 
        type: 'PT_BRANCH_TAG',
        quickFilterEnabled: false, 
        selectedValue: 'DEFAULT', 
        sortMode: 'ASCENDING_SMART', 
        tagFilter: '*', 
        useRepository: 'https://github.com/CBIIT/icdc-dataloader')
    gitParameter(branchFilter: 'origin/(.*)', 
        defaultValue: 'master', 
        name: 'ModelTag', 
        type: 'PT_BRANCH_TAG',
        quickFilterEnabled: false, 
        selectedValue: 'DEFAULT', 
        sortMode: 'ASCENDING_SMART', 
        tagFilter: '*', 
        useRepository: 'https://github.com/CBIIT/popsci-model.git')
	extendedChoice( 
        name: 'Environment', 
        defaultValue: 'dev', 
        description: 'Choose the environment to build', 
        type: 'PT_SINGLE_SELECT',
        value: 'dev,qa' )
    string(defaultValue: "", 
        description: 'S3 Folder to load data from', 
        name: 'S3Folder')
    extendedChoice( 
        defaultValue: 'no', 
        name: 'WipeDB', 
        description: 'Choose yes to wipe DB',
        quoteValue: false,
        multiSelectDelimiter: ',',
        value: 'no,yes',
        type: 'PT_RADIO')
    extendedChoice( 
        defaultValue: 'no', 
        name: 'CheatMode', 
        description: 'Bypass Data Validation',
        quoteValue: false,
        multiSelectDelimiter: ',',
        value: 'no,yes',
        type: 'PT_RADIO')
    extendedChoice( 
        defaultValue: 'false', 
        name: 'SplitTransactions', 
        description: 'Choose true to the Split Transactions',
        quoteValue: false,
        multiSelectDelimiter: ',',
        value: 'false,true',
        type: 'PT_SINGLE_SELECT')
	
  }
  options {
    ansiColor('xterm')
  }
  tools {
  	maven 'Default' 
    jdk 'Default' 
  }
  stages{
  	stage('checkout'){
  		steps {
  			checkout([$class: 'GitSCM', 
  				branches: [[name: "${params.Tag}"]], 
  				doGenerateSubmoduleConfigurations: 
  				false, extensions: [], submoduleCfg: [], 
				recursiveSubmodules: true,
  				userRemoteConfigs: 
  				//[[url: 'https://github.com/CBIIT/icdc-dataloader']]])
                                [[url: 'https://github.com/CBIIT/crdc-popsci-dataloader']]])

			sh 'git submodule update --init'
				
  			dir('popsci-deployments'){
  				git branch: 'main',
    			url: 'https://github.com/CBIIT/pop-sci-deployments.git'}
			
            dir('popsci-model'){
				git branch: "${params.ModelTag}",
				url: 'https://github.com/CBIIT/popsci-model.git'
            }
  		}
 
  	}
  	stage('load-data'){
 		environment {
            S3_FOLDER = "${params.S3Folder}"
            TIER  = "${params.Environment}"
            WIPE_DB = "${params.WipeDB}"
            CHEAT_MODE = "${params.CheatMode}"
            SPLIT  = "${params.SplitTransactions}"
 			SLACK_URL = "${SLACK_URL}"
            PROJECT_NAME = "popsci"
 		}
 		steps {
 			wrap([$class: 'AnsiColorBuildWrapper', colorMapName: "xterm"]) {
 			ansiblePlaybook(
                playbook: '${WORKSPACE}/popsci-deployments/ansible/playbooks/popsci-data-loader.yml',
            	inventory: '${WORKSPACE}/popsci-deployments/ansible/playbooks/hosts',
            	colorized: true,
				extras: '-vvv')
 			}
 		}
    }
  }
  post {

	cleanup {
	
	  cleanWs()
    
	}
  }
}
